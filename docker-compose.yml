version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-app:
    build:
      context: ./kafka-app
    volumes:
      - ./kafka-app:/usr/src/app
    environment:
      - KAFKA_BROKER_URL=kafka:9092
      - ZOOKEEPER_URL=zookeeper:2181
    depends_on:
      - kafka
    ports:
      - "3001:3001"

  workflow-service:
    build:
      context: ./workflow-service
    volumes:
      - ./workflow-service:/usr/src/app
    ports:
      - "3002:3002"
    depends_on:
      - kafka
    environment:
      - MONGODB_URI=mongodb://workflow-db:27017/workflowdb

  # web-admin-app:
  #   build:
  #     context: ./web-admin
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./web-admin:/usr/src/app
  #   ports:
  #     - "3003:3000"
  #   depends_on:
  #     - workflow-service

  web-app-applicant:
    build:
      context: ./web-app-applicant
      dockerfile: Dockerfile
    volumes:
      - ./web-app-applicant:/usr/src/app
    ports:
      - "3004:3000"
    depends_on:
      - workflow-service

  # web-branch-app:
  #   build:
  #     context: ./web-branch-app
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./web-branch-app:/usr/src/app
  #   ports:
  #     - "3005:3000"
  #   depends_on:
  #     - workflow-service

  workflow-db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./wfdb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${WORKFLOW_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${WORKFLOW_DB_PASSWORD}

  user-db:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - ./userdb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${USER_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${USER_DB_PASSWORD}

  nginx-proxy:
    build:
      context: ./nginx-proxy
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - web-app-applicant
      - workflow-service
